
# Group Account

Account APIs provide management of users who will manage the IoT infrastructure within a single tenant context.

The attributes of Account object are the following, 

+ `first_name` (string) : First Name of the tenant to be registered.
+ `last_name` (string) : Last Name of the tenant to be registered.
+ `company` (string) : Company Name of the tenant to be registered.
+ `email` (string) : Email-ID of the tenant to be registered.
+ `username` (string): Username of the tenant to be registered.
+ `password` (string) : Password of the created tenant account.
+ `group_map` (string) : Groups to which the user to be attached.

Optional attributes
+ `phone` : Phone Number of the tenant to be registered. `Default` None 
+ `send_notification` : Toggle to enable/disable notification. `Default` False
+ `notification_method` : List all the modes of notification. `Default` email
+ `directory_map` : Directories to which the user to be attached. `Default` default
+ `api_key` : API Key generated for the user.
+ `api_secret` : API Secret generated for the user.
+ `email_verfification` : Toggle to enable/disable email verification. `Default` False
+ `email_success_verification` : Toggle to enable/disable email success verification. `Default` False
+ `welcome_email` : Toggle to enable/disable welcome email. `Default` False
+ `email_template` : JSON structure of email template. `Default` /get/email_template_example.
+ `is_enabled` : Toggle to enable/disable the tenant. `Default` True
+ `is_revoked` : Toggle to enable/disable the tenant temp access. `Default` False 


## Create [/auth/v1/account]

<!-- include(post-account.apib) -->

## List [/auth/v1/account?directory={dname}&group={gname}]

+ Parameters
    + dname (string, optional) ... Get list of users part of the given directory.
    + gname (string, optional) ... Get list of users part of the given group.

<!-- include(get-account.apib) -->

## List/Delete/Update [/auth/v1/account/{id}]

+ Parameters
    + id (string, required) ... Provide the email-id or username of the user.

<!-- include(delete-account-id.apib) -->
<!-- include(patch-account-id.apib) -->
<!-- include(get-account-id.apib) -->

## Reset Password [/auth/v1/account/{id}/reset-password]

+ Parameters
    + id (string, required) ... Provide the email-id or username of the user.

<!-- include(post-reset-password-account-id.apib) -->

## API Key [/auth/v1/account/{id}/api-key]

+ Parameters
    + id (string, required) ... Provide the email-id or username of the user.

<!-- include(post-api-key-account-id.apib) -->
<!-- include(delete-api-key-account-id.apib) -->

<!-- include(docs-group/group-group.apib) -->
<!-- include(docs-directory/group-directory.apib) -->
